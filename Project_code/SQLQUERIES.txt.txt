CREATE OR REPLACE FUNCTION update_hotel_room_count()
RETURNS TRIGGER AS $$
DECLARE
  h_id INTEGER;
  room_count INTEGER;
BEGIN
    h_id := new.hotel_ID_iD;
  SELECT COUNT(*) INTO room_count FROM public.app_room WHERE hotel_ID_id = h_id;
  UPDATE public.app_hotel  SET "numberOfRooms" = room_count WHERE hotel_ID = h_id;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER update_hotel_room_count_trigger
AFTER INSERT OR UPDATE ON public.app_room
FOR EACH ROW
EXECUTE FUNCTION update_hotel_room_count();



CREATE OR REPLACE FUNCTION update_hotel_room_count_after_delete()
RETURNS TRIGGER AS $$
DECLARE
  h_id INTEGER;
  room_count INTEGER;
BEGIN
    h_id := old.hotel_ID_iD;
  SELECT COUNT(*) INTO room_count FROM public.app_room WHERE hotel_ID_id = h_id;
  UPDATE public.app_hotel  SET "numberOfRooms" = room_count WHERE hotel_ID = h_id;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER update_hotel_room_count_trigger_after_delete
AFTER DELETE ON public.app_room
FOR EACH ROW
EXECUTE FUNCTION update_hotel_room_count_after_delete();



CREATE OR REPLACE FUNCTION update_hotel_chain_count()
RETURNS TRIGGER AS $$
DECLARE
  ch_id INTEGER;
  hotel_count INTEGER;
BEGIN
  ch_id := NEW.chain_ID_id;
  SELECT COUNT(*) INTO hotel_count FROM public.app_hotel WHERE chain_ID_id = ch_id;
  UPDATE public.app_hotel_chain SET "numberOfHotels" = hotel_count WHERE chain_ID = ch_id;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER update_hotel_chain_count_trigger
AFTER INSERT OR UPDATE ON public.app_hotel
FOR EACH ROW
EXECUTE FUNCTION update_hotel_chain_count();







CREATE OR REPLACE FUNCTION update_hotel_chain_count_after_delete()
RETURNS TRIGGER AS $$
DECLARE
  ch_id INTEGER;
  hotel_count INTEGER;
BEGIN
  ch_id := old.chain_ID_id;
  SELECT COUNT(*) INTO hotel_count FROM public.app_hotel WHERE chain_ID_id = ch_id;
  UPDATE public.app_hotel_chain SET "numberOfHotels" = hotel_count WHERE chain_ID = ch_id;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER update_hotel_chain_count_trigger_after_delete
AFTER delete ON public.app_hotel
FOR EACH ROW
EXECUTE FUNCTION update_hotel_chain_count_after_delete();

INSERT INTO public.app_hotel_chain(
	chain_id, "addressArray", name, email, "nTelephones", rating, image_url, "numberOfHotels")
	VALUES (1, Array['293 Mich St, Ottawa, ON'], 'Hotels Mich', 'uottawa@hotelskhouri.com', Array[613-432-1234], 4, 'https://i.pinimg.com/736x/2d/fa/29/2dfa29a9762b4fba3a7ed60c227e4517.jpg', 8),
           (2, Array['435 Kevin Ave, Toronto, ON'], 'Hotels Tawardos', 'uottawa@hotelstawadros.com', Array[647-344-4213], 5, 'https://previews.123rf.com/images/pixbold/pixbold2104/pixbold210400058/166908130-rw-logo-design-vector-swoosh-letter-rw-logo-design.jpg', 8),
           (3, Array['721 Emiliano Rd, Montreal, QC'], 'Hotels Guad', 'uottawa@hotelsguad.com', Array[418-532-0987], 5, 'https://www.logolynx.com/images/logolynx/5d/5d1dc02726b02c08ffd4e4f7bbe5e022.jpeg', 8),
           (4, Array['777 Rod St Vancouver, BC'], 'Hotels Wave', 'uottawa@hotelswave.com', Array[604-738-2034], 4, 'https://static.vecteezy.com/system/resources/previews/007/725/885/original/alphabet-letters-initials-monogram-logo-kt-tk-k-and-t-free-vector.jpg', 8),
           (5, Array['069 Rottweiler St, Halifax, NS'], 'Hotels Loki','uottawa@hotelsloki.com', Array[902-420-8989], 3, 'https://static.vecteezy.com/system/resources/previews/007/932/452/original/letter-hk-logo-design-vector.jpg', 8); 


INSERT INTO public.app_hotel(
	hotel_id, address, zone, name, "nTelephones", email, rating, image_url, chain_id_id, "numberOfRooms")
	VALUES (011, '120 MacLaren St', 'Ottawa, Ontario', 'Residence Inn par Hotelskhouri', Array['613-444-1111'], 'uottawa@residenceinn.ca', 2, 'https://st2.depositphotos.com/4035913/8096/i/600/depositphotos_80964546-stock-photo-bucharest-at-sunset.jpg', 1, 5),
    (012, '240 Carling Ave', 'Ottawa, Ontario', 'Courtyard par Hotelskhouri', Array['613-222-7575'], 'uottawa@courtyard.ca', 5, 'https://www.re-thinkingthefuture.com/wp-content/uploads/2020/08/A1609-10-things-to-remember-while-designing-hotels.jpg', 1, 5),
    (013, '534 Bank Ave', 'Ottawa, Ontario', 'Delta par Hotelskhouri', Array['613-560-3200'], 'uottawa@delta.ca', 3, 'https://media.istockphoto.com/id/187363337/photo/modern-hotel-building-in-summer.jpg?s=612x612&w=0&k=20&c=eRVDcadZTKs5t2K-CEeXT6DiJQ68Fnbs6u9F-0S_v8Q=', 1, 5),
    (014, '149 Dixie Dr', 'Ottawa, Ontario', 'Fairfield par Hotelskhouri', Array['613-893-4026'], 'uottawa@fairfield.ca', 3, 'https://insights.ehotelier.com/wp-content/uploads/sites/6/2023/01/Screen-Shot-2023-01-18-at-9.13.28-pm-768x388.png', 1, 5),
    (015, '102 Billings Ave', 'Ottawa, Ontario', 'TownePlace par Hotelskhouri', Array['613-985-7140'], 'uottawa@towneplace.ca', 5, 'https://images.thestar.com/vBk6TJ-OgECrGRuJ4pYCAdaxj_E=/1280x1024/smart/filters:cb(1569967813517)/https://www.thestar.com/content/dam/thestar/halifax/2019/07/25/very-high-end-12-storey-hotel-approved-for-downtown-halifax/a_hal_steele_hotel25.jpg', 1, 5),
    (016, '993 Drive Rd', 'Ottawa, Ontario', 'Fourpoints par Hotelskhouri', Array['613-552-9588'], 'uottawa@fourpoints.ca', 5, 'https://static1.gensler.com/uploads/image/79774/01_project-walt-disney-world-swan-reserve-hotel-01-2000x1125_1651275624_1024x576_1672965528.jpg', 1, 5),
    (017, '457 Guerth Ave', 'Ottawa, Ontario', 'Westin par Hotelskhouri', Array['613-553-7217'], 'uottawa@westin.ca', 4, 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSx72CiljttwL_eOFk79qeieiSDnMd4_Rjmgw&usqp=CAU', 1, 5),
    (018, '604 Bryce Ave', 'Ottawa, Ontario', 'Sheraton par Hotelskhouri', Array['613-764-2321'], 'uottawa@sheraton.ca', 2, 'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/18/0e/ce/a0/le-magnifique-hotel-de.jpg?w=1200&h=1200&s=1', 1, 5),
	(021, '136 Ferrari St', 'Toronto, Ontario', 'Best West par Hotelstawadros', Array['647-444-1111'], 'uottawa@bestwest.ca', 3, 'https://upload.wikimedia.org/wikipedia/commons/3/37/Delta_Hotel.jpg', 2, 5),
    (022, '650 Harry Ave', 'Toronto, Ontario', 'Holiday Inn par Hotelstawadros', Array['647-222-7575'], 'uottawa@holiday.ca', 5, 'https://digital.ihg.com/is/image/ihg/intercontinental-toronto-4084375988-4x3', 2, 5),
    (023, '932 Peter St', 'Toronto, Ontario', 'Radisson par Hotelstawadros', Array['647-783-3972'], 'uottawa@radisson.ca', 3, 'https://www.reminetwork.com/wp-content/uploads/hotel-x-toronto.jpg', 2, 5),
    (024, '800 Basil Rd', 'Toronto, Ontario', 'Novotel par Hotelstawadros', Array['647-082-5126'], 'uottawa@novotel.ca', 5, 'https://www.gouverneur.com/uploads/1/0/6/8/106825145/published/gouvernement-provincial-hiver_3.jpg?1576850606', 2, 5),
    (025, '637 Apple St', 'Toronto, Ontario', 'Trinity par Hotelstawadros', Array['647-785-5000'], 'uottawa@trinity.ca', 4, 'https://media-cms.vrbo.com//images/gxwgulxyxxy1/70kJsxr01x9klZh6E4oFdT/e454a9f9ee08b2b042000fd5c590ee9d/0_200419149-001.jpg?impolicy=resizecrop&rw=1024&rh=429&ch=429&cw=1024&ra=fill&q=mediumHigh', 2, 5),
    (026, '993 Saints Ave', 'Toronto, Ontario', 'Fairmont par Hotelstawadros', Array['647-899-0010'], 'uottawa@fairmont.ca', 3, 'https://phgcdn.com/images/uploads/YQBLC/masthead/1600x813-Exterior-2-Fairmont-le-Chateau-Montebello-Quebec-Canada.jpg', 2, 5),
    (027, '632 Cosmic Ave', 'Toronto, Ontario', 'King par Hotelstawadros', Array['647-746-4764'], 'uottawa@king.ca', 5, 'https://www.telegraph.co.uk/content/dam/Travel/hotels/2022/march/the-langdale-hotel-lake-district-p.jpg', 2, 5),
    (028, '604 Hunter Ave', 'Toronto, Ontario', 'Chelsea par Hotelstawadros', Array['647-904-2211'], 'uottawa@chelsea.ca', 3, 'https://media-cdn.tripadvisor.com/media/photo-s/18/2a/3b/f8/in-the-middle-of-the.jpg', 2, 5), 
	(031, '989 Fountain St', 'Montreal, Quebec', 'Hilton par Hotelsguad', Array['418-444-1111'], 'uottawa@hilton.ca', 4, 'https://images.charmingsardinia.com/hotels/1077/static/files/bio-hotel-hermitage01.jpg', 3, 5),
    (032, '554 Middle Ave', 'Montreal, Quebec', 'Universel par Hotelsguad', Array['418-222-7575'], 'uottawa@universel.ca', 4, 'https://www.fodors.com/wp-content/uploads/2017/10/mnt8.jpg', 3, 5),
    (033, '713 Oval St', ', Montreal, Quebec', 'Lofts par Hotelsguad', Array['418-783-3972'], 'uottawa@lofts.ca', 4, 'https://www.planetware.com/wpimages/2019/04/canada-quebec-quebec-city-best-hotels-auberge-saint-antoine.jpg', 3, 5),
    (034, '934 Bacon Rd', 'Montreal, Quebec', 'Concorde par Hotelsguad', Array['418-082-5126'], 'uottawa@concorde.ca', 5, 'https://www.gouverneur.com/uploads/1/0/6/8/106825145/published/gouvernement-provincial-hiver_3.jpg?1576850606', 3, 5),
    (035, '712 Maple St', 'Montreal, Quebec', 'Jardin par Hotelsguad', Array['418-785-5000'], 'uottawa@jardin.ca', 4, 'https://media-cms.vrbo.com//images/gxwgulxyxxy1/70kJsxr01x9klZh6E4oFdT/e454a9f9ee08b2b042000fd5c590ee9d/0_200419149-001.jpg?impolicy=resizecrop&rw=1024&rh=429&ch=429&cw=1024&ra=fill&q=mediumHigh', 3, 5),
    (036, '521 Anchor Ave', 'Montreal, Quebec', 'Quartier par Hotelsguad', Array['418-899-0010'], 'uottawa@quartier.ca', 3, 'https://phgcdn.com/images/uploads/YQBLC/masthead/1600x813-Exterior-2-Fairmont-le-Chateau-Montebello-Quebec-Canada.jpg', 3, 5),
    (037, '549 Chestnut Ave', 'Montreal, Quebec', 'Travelodge par Hotelsguad', Array['418-746-4764'], 'uottawa@travelodge.ca', 2, 'https://www.telegraph.co.uk/content/dam/Travel/hotels/2022/march/the-langdale-hotel-lake-district-p.jpg', 3, 5),
    (038, '741 Arctic Ave', 'Montreal, Quebec', 'Repotel par Hotelsguad', Array['418-904-2211'], 'uottawa@repotel.ca', 5, 'https://media-cdn.tripadvisor.com/media/photo-s/18/2a/3b/f8/in-the-middle-of-the.jpg', 3, 5), 
	(041, '831 Draven St', 'Vancouver, British Columbia', 'Element par Hotelswave', Array['604-444-1111'], 'uottawa@element.ca', 4, 'https://upload.wikimedia.org/wikipedia/commons/a/a9/Hotel_vanc_2007.jpg', 4, 5),
	(042, '622 Knight Ave', 'Vancouver, British Columbia', 'Panpacif par Hotelswave', Array['604-222-7575'], 'uottawa@panpacif.ca', 2, 'https://www.traveller.com.au/content/dam/images/g/m/7/x/p/f/image.gallery.galleryLandscape.620x414.gmakjr.png/1453333612558.jpg', 4, 5),
	(043, '482 Petal St', 'Vancouver, British Columbia', 'Marpole par Hotelswave', Array['604-783-3972'], 'uottawa@marpole.ca', 4, 'https://content.r9cdn.net/rimg/himg/c4/a0/5e/ice-32483-102819633-191720.jpg?width=440&height=220&crop=true', 4, 5),
	(044, '903 Garnet Rd', 'Vancouver, British Columbia', 'Executive par Hotelswave', Array['604-082-5126'], 'uottawa@executive.ca', 4, 'https://storeys.com/wp-content/uploads/2023/03/Marcon-W-Pender-Richards-Street-Downtown-Vancouver-Hotel-1.jpg', 4, 5),
	(045, '510 Shorten St', 'Vancouver, British Columbia', 'Sutton par Hotelswave', Array['604-785-5000'], 'uottawa@sutton.ca', 5, 'https://cf.bstatic.com/xdata/images/hotel/270x200/88496364.jpg?k=fc4daae0b1c02c9e1177f67ec789ab88980155c598342fe8487291a791c590d8&o=', 4, 5),
	(046, '614 Kream Ave', 'Vancouver, British Columbia', 'River par Hotelswave', Array['604-899-0010'], 'uottawa@river.ca', 3, 'https://media-magazine.trivago.com/wp-content/uploads/2018/08/29080558/hotel-blu-vancouver.jpeg', 4, 5),
	(047, '741 Park Ave', 'Vancouver, British Columbia', 'Darius par Hotelswave', Array['604-746-4764'], 'uottawa@darius.ca', 5, 'https://media.hrs.com/media/image/05/3e/e1/Four_Seasons_Hotel_Vancouver-Vancouver-Aussenansicht-1-33285_1280x1280.jpg', 4, 5),
	(048, '852 Beaux Ave', 'Vancouver, British Columbia', 'Morgana par Hotelswave', Array['604-844-6667'], 'uottawa@morgana.ca', 3, 'https://ik.imgkit.net/3vlqs5axxjf/external/ik-seo/http://images.ntmllc.com/v4/hotel/P94/P94601/P94601_EXT_ZB34FD/910-Beach-Ave-Apartment-Hotel-Exterior.jpg?tr=w-780%2Ch-437%2Cfo-auto', 4, 5), 
	(051, '314 Riven St', 'Halifax, Nova Scotia', 'Malphite par Hotelswave', Array['902-543-1400'], 'uottawa@malphite.ca', 3, 'https://www.novascotia.com/sites/default/files/2019-05/Quarterdeck%20Resort%20Villas%201920x1080.jpg', 5, 5),
	(052, '105 Jade Ave', 'Halifax, Nova Scotia', 'Marriott par Hotelswave', Array['902-111-3995'], 'uottawa@marriott.ca', 4, 'https://cdn.budgetyourtrip.com/images/photos/headerphotos/medium/canada_halifax.jpg', 5, 5),
	(053, '639 Church St', 'Halifax, Nova Scotia', 'Mundo par Hotelswave', Array['902-888-9979'], 'uottawa@mundo.ca', 5, 'https://static.wixstatic.com/media/3aafcb_9f55001595ee4e22b63a0c6a3264edb8~mv2.jpg/v1/fill/w_640,h_426,al_l,q_80,usm_0.66_1.00_0.01,enc_auto/3aafcb_9f55001595ee4e22b63a0c6a3264edb8~mv2.jpg', 5, 5),
	(054, '834 Rose Rd', 'Halifax, Nova Scotia', 'Sigma par Hotelswave', Array['902-002-5146'], 'uottawa@sigma.ca', 3, 'https://i0.wp.com/files.tripstodiscover.com/files/2015/05/White-Point-Beach-Resort.jpg?resize=784%2C588', 5, 5),
	(055, '128 Trinity St', 'Halifax, Nova Scotia', 'Delta par Hotelswave', Array['902-178-4343'], 'uottawa@delta.ca', 5, 'https://www.whitepoint.com/content/uploads/2022/12/WhitePointBbeachResortatsunset-1920x898.jpg', 5, 5),
	(056, '843 Manor Ave', 'Halifax, Nova Scotia', 'Winston par Hotelswave', Array['902-624-1545'], 'uottawa@winston.ca', 4, 'https://content.r9cdn.net/himg/7a/39/4c/leonardo-31779-150589310-299499.jpg', 5, 5),
	(057, '731 Mount Ave', 'Halifax, Nova Scotia', 'McCree par Hotelswave', Array['902-746-4565'], 'uottawa@mccree.ca', 3, 'https://www.ca.kayak.com/rimg/himg/20/39/cb/leonardo-1053285-hotel_O-295650.jpg?width=1366&height=768&xhint=1320&yhint=829&crop=true', 5, 5),
	(058, '475 Silver Ave', 'Halifax, Nova Scotia', 'Lucio par Hotelswave', Array['902-355-8632'], 'uottawa@lucio.ca', 2, 'https://www.choicehotels.com/hotelmedia/CA/NS/halifax/CN207/320/CN207Exterior06_1.jpg', 5, 5);


INSERT INTO public.app_capacity(
    id, capacity)
    VALUES (1, 'Single'),
(2, 'Double'),
(3, 'Suite'); 


INSERT INTO public.app_employee(
	ssa, first_name, middle_name, last_name, post, password)
	VALUES (987654321, 'Justin', NULL, 'Trudeau', 'Manager', 'dog123'),
	(123456789,'Franz', NULL, 'Ferdinand','Manager','dog123');


INSERT INTO public.app_works_for(
	id, employee_id, hotel_id)
	VALUES (3, 123456789, 11),(4,987654321,12); 

INSERT INTO public.app_room(
    id, room_number, hotel_id_id, capacity_id, extrabed, price, "view")
    VALUES (1, 111, 011, 1, true, 49.99, Array['city']),
	(2, 211, 011, 1, false, 36.30, Array['city']),   
	(3, 311, 011, 2, true, 54.60, Array['city']),
	(4, 411, 011, 2, false, 39.30, Array['city']), 
	(5, 511, 011, 3, true, 65.99, Array['city']),
	(6, 611, 011, 3, false, 60.99, Array['city']), 
	(7, 112, 012, 1, true, 240.45, Array['city','sea']), 
	(8, 212, 012, 1, false, 200.99, Array['city','sea']),
	(9, 312, 012, 2, true, 292.83, Array['city','sea']),
	(10, 412, 012, 2, false, 255.75, Array['city','sea']), 
	(11, 512, 012, 3, true, 440.20, Array['city','sea']),
	(12, 612, 012, 3, false, 420.40, Array['city','sea']), 
	(13, 113, 013, 1, true, 61.80, Array['city']), 
	(14, 213, 013, 1, false, 50.99, Array['city']),
	(15, 313, 013, 2, true, 76.89, Array['city']),
	(16, 413, 013, 2, false, 68.80, Array['city']),
	(17, 513, 013, 3, true, 100.30, Array['city']),
	(18, 613, 013, 3, false, 90.70, Array['city']),
	(19, 114, 014, 1, true, 65.99, Array['city']),
	(20, 214, 014, 1, false, 54.99, Array['city']),
	(21, 314, 014, 2, true, 78.50, Array['city']),
	(22, 414, 014, 2, false, 59.45, Array['city']),
	(23, 514, 014, 3, true, 97.30, Array['city']),
	(24, 614, 014, 3, false, 215.39, Array['city']),
	(25, 115, 015, 1, true, 260.98, Array['city']),
	(26, 215, 015, 1, false, 216.15, Array['city']),
	(27, 315, 015, 2, true, 306.78, Array['city']),
	(28, 415, 015, 2, false, 277.99, Array['city']),
	(29, 515, 015, 3, true, 533.03, Array['city']),
	(30, 615, 015, 3, false, 500.99, Array['city']),
	(31, 116, 016, 1, true, 258.67, Array['city']),
	(32, 216, 016, 1, false, 211.42, Array['city']),
	(33, 316, 016, 2, true, 322.90, Array['city']),
	(34, 416, 016, 2, false, 283.34, Array['city']),
	(35, 516, 016, 3, true, 546.86, Array['city']),
	(36, 616, 016, 3, false, 516.99, Array['city']),
	(37, 117, 017, 1, true, 250.72, Array['city']),
	(38, 217, 017, 1, false, 209.34, Array['city']),
	(39, 317, 017, 2, true, 315.11, Array['city']),
	(40, 417, 017, 2, false, 277.44, Array['city']),
	(41, 517, 017, 3, true, 435.00, Array['city']),
	(42, 617, 017, 3, false, 400.55, Array['city']),
	(43, 118, 018, 1, true, 40.65, Array['city']),
	(44, 218, 018, 1, false, 26.99, Array['city']),
	(45, 318, 018, 2, true, 50.52, Array['city']),
	(46, 418, 018, 2, false, 34.80, Array['city']),
	(47, 518, 018, 3, true, 67.12, Array['city']),
	(48, 618, 018, 3, false, 60.12, Array['city']),
	(49, 121, 021, 1, true, 61.31, Array['city']), 
	(50, 221, 021, 1, false, 52.04, Array['city']),
	(51, 321, 021, 2, true, 82.83, Array['city']),
	(52, 421, 021, 2, false, 69.75, Array['city']),
	(53, 521, 021, 3, true, 103.32, Array['city']),
	(54, 621, 021, 3, false, 92.59, Array['city']),
	(55, 122, 022, 1, true, 245.90, Array['city']),
	(56, 222, 022, 1, false, 207.66, Array['city']),
	(57, 322, 022, 2, true, 322.84, Array['city']),
	(58, 422, 022, 2, false, 283.54, Array['city']),
	(59, 522, 022, 3, true , 533.43, Array['city']),
	(60, 622, 022, 3, false, 500.80, Array['city']),
	(61, 123, 023, 1, true, 61.89, Array['city']),
	(62, 223, 023, 1, false, 50.90, Array['city']),
	(63, 323, 023, 2, true, 78.02, Array['city']),
	(64, 423, 023, 2, false, 69.12, Array['city']),
	(65, 523, 023, 3, true, 101.33, Array['city']),
	(66, 623, 023, 3, true, 92.21, Array['city']),
	(67, 124, 024, 1, true, 253.12, Array['city']),
	(68, 224, 024, 1, false, 210.82, Array['city']),
	(69, 324, 024, 2, true, 319.03, Array['city']),
	(70, 424, 024, 2, false, 275.43, Array['city']),
	(71, 524, 024, 3, true, 580.98, Array['city']),
	(72, 624, 024, 3, false, 520.12, Array['city']),
	(73, 125, 025, 1, true, 245.99, Array['city']),
	(74, 225, 025, 1, false, 210.80, Array['city']),
	(75, 325, 025, 2, true, 290.80, Array['city']),
	(76, 425, 025, 2, false, 250.30, Array['city']),
	(77, 525, 025, 3, true, 432.81, Array['city']),
	(78, 625, 025, 3, false, 400.99, Array['city']),
	(79, 126, 026, 1, true, 63.59, Array['city']),
	(80, 226, 026, 1, false, 55.90, Array['city']),
	(81, 326, 026, 2, true, 78.23, Array['city']),
	(82, 426, 026, 2, false, 66.42, Array['city']),
	(83, 526, 026, 3, true, 112.31, Array['city']),
	(84, 626, 026, 3, false, 100.29, Array['city']),
	(85, 127, 027, 1, true, 256.32, Array['city']),
	(86, 227, 027, 1, false, 215.90, Array['city']),
	(87, 327, 027, 2, true, 374.13, Array['city']),
	(88, 427, 027, 2, false, 279.99, Array['city']),
	(89, 527, 027, 3, true, 544.77, Array['city']),
	(90, 627, 027, 3, false, 500.98, Array['city']),
	(91, 128, 028, 1, true, 59.11, Array['city']),
	(92, 228, 028, 1, false, 48.12, Array['city']),
	(93, 328, 028, 2, true, 72.83, Array['city']),
	(94, 428, 028, 2, false, 63.12, Array['city']),
	(95, 528, 028, 3, true, 93.11, Array['city']),
	(96, 628, 028, 3, false, 86.29, Array['city']),
	(97, 131, 031, 1, true, 260.75, Array['mountain','forest']),
	(98, 231, 031, 1, false, 222.32, Array['mountain','forest']),
	(99, 331, 031, 2, true, 286.62, Array['mountain','forest']),
	(100, 431, 031, 2, false, 247.76, Array['mountain','forest']),
	(101, 531, 031, 3, true, 415.85, Array['mountain','forest']),
	(102, 631, 031, 3, false, 399.99, Array['mountain','forest']),
	(103, 132, 032, 1, true, 267.32, Array['mountain']),
	(104, 232, 032, 1, false, 204.67, Array['mountain']),
	(105, 332, 032, 2, true, 312.54, Array['mountain']),
	(106, 432, 032, 2, false, 268.56, Array['mountain']),
	(107, 532, 032, 3, true, 440.99, Array['mountain']),
	(108, 632, 032, 3, false, 401.99, Array['mountain']),
	(109, 133, 033, 1, true, 289.66, Array['forest']),
	(110, 233, 033, 1, false, 235.33, Array['forest']),
	(111, 333, 033, 2, true, 352.55, Array['forest']),
	(112, 433, 033, 2, false, 302.12, Array['forest']),
	(113, 533, 033, 3, true, 474.99, Array['forest']),
	(114, 633, 033, 3, false, 450.99, Array['forest']),
	(115, 134, 034, 1, true, 260.50, Array['forest']),
	(116, 234, 034, 1, false, 207.88, Array['forest']),
	(117, 334, 034, 2, true, 322.22, Array['forest']),
	(118, 434, 034, 2, false, 296.22, Array['forest']),
	(119, 534, 034, 3, true, 547.77, Array['forest']),
	(120, 634, 034, 3, false, 502.99, Array['forest']),
	(121, 135, 035, 1, true, 239.11, Array['garden']),
	(122, 235, 035, 1, false, 202.89, Array['garden']),
	(123, 335, 035, 2, true, 301.88, Array['garden']),
	(124, 435, 035, 2, false, 265.89, Array['garden']),
	(125, 535, 035, 3, true, 399.99, Array['garden']),
	(126, 635, 035, 3, false, 350.92, Array['garden']),
	(127, 136, 036, 1, true, 61.32, Array['forest','sea']),
	(128, 236, 036, 1, false, 53.48, Array['forest','sea']),
	(129, 336, 036, 2, true, 80.33, Array['forest','sea']),
	(130, 436, 036, 2, false, 65.22, Array['forest','sea']),
	(131, 536, 036, 3, true, 100.99, Array['forest','sea']),
	(132, 636, 036, 3, false, 80.92, Array['forest','sea']),
	(133, 137, 037, 1, true, 22.80, Array['mountain']),
	(134, 237, 037, 1, false, 15.89, Array['mountain']),
	(135, 337, 037, 2, true, 30.35, Array['mountain']),
	(136, 437, 037, 2, false, 24.40, Array['mountain']),
	(137, 537, 037, 3, true, 44.99, Array['mountain']),
	(138, 637, 037, 3, false, 40.99, Array['mountain']),
	(139, 138, 038, 1, true, 246.99, Array['city']),
	(140, 238, 038, 1, false, 220.50, Array['city']),
	(141, 338, 038, 2, true, 325.25, Array['city']),
	(142, 438, 038, 2, false, 275.75, Array['city']),
	(143, 538, 038, 3, true, 555.55, Array['city']),
	(144, 638, 038, 3, false, 520.98, Array['city']),
	(145, 141, 041, 1, true, 249.99, Array['city']),
	(146, 241, 041, 1, false, 209.99, Array['city']),
	(147, 341, 041, 2, true, 314.50, Array['city']),
	(148, 441, 041, 2, false, 275.50, Array['city']),
	(149, 541, 041, 3, true, 429.99, Array['city']),
	(150, 641, 041, 3, false, 399.99, Array['city']),
	(151, 142, 042, 1, true, 24.99, Array['city']),
	(152, 242, 042, 1, false, 19.99, Array['city']),
	(153, 342, 042, 2, true, 34.99, Array['city']),
	(154, 442, 042, 2, false, 29.99, Array['city']),
	(155, 542, 042, 3, true, 49.99, Array['city']),
	(156, 642, 042, 3, false, 42.99, Array['city']), 
	(157, 143, 043, 1, true, 260.20, Array['city','sea']),
	(158, 243, 043, 1, false, 222.13, Array['city','sea']),
	(159, 343, 043, 2, true, 325.99, Array['city','sea']),
	(160, 443, 043, 2, false, 287.27, Array['city','sea']),
	(161, 543, 043, 3, true, 445.06, Array['city','sea']),
	(162, 643, 043, 3, false, 403.82, Array['city','sea']),
	(163, 144, 044, 1, true, 263.54, Array['city']),
	(164, 244, 044, 1, false, 228.90, Array['city']),
	(165, 344, 044, 2, true, 329.51, Array['city']),
	(166, 444, 044, 2, false, 294.12, Array['city']),
	(167, 544, 044, 3, true, 438.99, Array['city']),
	(168, 644, 044, 3, false, 392.11, Array['city']),
	(169, 145, 045, 1, true, 260.60, Array['city']),
	(170, 245, 045, 1, false, 210.10, Array['city']),
	(171, 345, 045, 2, true, 320.20, Array['city']),
	(172, 445, 045, 2, false, 280.80, Array['city']),
	(173, 545, 045, 3, true, 550.50, Array['city']),
	(174, 645, 045, 3, false, 510.99, Array['city']),
	(175, 146, 046, 1, true, 63.91, Array['city','garden']),
	(176, 246, 046, 1, false, 52.65, Array['city','garden']),
	(177, 346, 046, 2, true, 74.42, Array['city','garden']),
	(178, 446, 046, 2, false, 63.09, Array['city','garden']),
	(179, 546, 046, 3, true, 103.87, Array['city','garden']),
	(180, 646, 046, 3, false, 92.39, Array['city','garden']),
	(181, 147, 047, 1, true, 258.76, Array['city']),
	(182, 247, 047, 1, false, 220.99, Array['city']),
	(183, 347, 047, 2, true, 310.00, Array['city']),
	(184, 447, 047, 2, false, 298.87, Array['city']),
	(185, 547, 047, 3, true, 540.88, Array['city']),
	(186, 647, 047, 3, false, 502.83, Array['city']),
	(187, 148, 048, 1, true, 65.21, Array['city']),
	(188, 248, 048, 1, false, 56.21, Array['city']),
	(189, 348, 048, 2, true, 82.65, Array['city']),
	(190, 448, 048, 2, false, 73.95, Array['city']),
	(191, 548, 048, 3, true, 107.76, Array['city']),
	(192, 648, 048, 3, false, 97.23, Array['city']),
	(193, 151, 051, 1, true, 63.80, Array['mountains','sea']),
	(194, 251, 051, 1, false, 54.69, Array['mountains','sea']),
	(195, 351, 051, 2, true, 80.65, Array['mountains','sea']),
	(196, 451, 051, 2, false, 70.12, Array['mountains','sea']),
	(197, 551, 051, 3, true, 106.77, Array['mountains','sea']),
	(198, 651, 051, 3, false, 94.23, Array['mountains','sea']), 
	(199, 152, 052, 1, true, 289.65, Array['sea']),
	(200, 252, 052, 1, false, 239.12, Array['sea']),
	(201, 352, 052, 2, true, 352.95, Array['sea']),
	(202, 452, 052, 2, false, 304.70, Array['sea']),
	(203, 552, 052, 3, true, 472.20, Array['sea']),
	(204, 652, 052, 3, false, 435.10, Array['sea']),
	(205, 153, 053, 1, true, 270.65, Array['mountains','sea']),
	(206, 253, 053, 1, false, 231.87, Array['mountains','sea']),
	(207, 353, 053, 2, true, 342.77, Array['mountains','sea']),
	(208, 453, 053, 2, false, 301.41, Array['mountains','sea']),
	(209, 553, 053, 3, true, 560.25, Array['mountains','sea']),
	(210, 653, 053, 3, false, 520.21, Array['mountains','sea']),
	(211, 154, 054, 1, true, 64.99, Array['city','sea']),
	(212, 254, 054, 1, false, 54.99, Array['city','sea']),
	(213, 354, 054, 2, true, 75.54, Array['city','sea']),
	(214, 454, 054, 2, false, 67.55, Array['city','sea']),
	(215, 554, 054, 3, true, 105.00, Array['city','sea']),
	(216, 654, 054, 3, false, 905.87, Array['city','sea']),
	(217, 155, 055, 1, true, 246.90, Array['mountains']),
	(218, 255, 055, 1, false, 215.87, Array['mountains']),
	(219, 355, 055, 2, true, 344.86, Array['mountains']),
	(220, 455, 055, 2, false, 288.76, Array['mountains']),
	(221, 555, 055, 3, true, 535.99, Array['mountains']),
	(222, 655, 055, 3, false, 499.99, Array['mountains']),
	(223, 156, 056, 1, true, 233.34, Array['sea']),
	(224, 256, 056, 1, false, 201.98, Array['sea']),
	(225, 356, 056, 2, true, 299.99, Array['sea']),
	(226, 456, 056, 2, false, 268.99, Array['sea']),
	(227, 556, 056, 3, true, 423.33, Array['sea']),
	(228, 656, 056, 3, false, 399.99, Array['sea']),
	(229, 157, 057, 1, true, 62.33, Array['sea']),
	(230, 257, 057, 1, false, 52.22, Array['sea']),
	(231, 357, 057, 2, true, 77.45, Array['sea']),
	(232, 457, 057, 2, false, 68.54, Array['sea']),
	(233, 557, 057, 3, true, 106.76, Array['sea']),
	(234, 657, 057, 3, false, 92.88, Array['sea']),
	(235, 158, 058, 1, true, 25.99, Array['city','sea']),
	(236, 258, 058, 1, false, 20.99, Array['city','sea']),
	(237, 358, 058, 2, true, 35.99, Array['city','sea']),
	(238, 458, 058, 2, false, 30.99, Array['city','sea']),
	(239, 558, 058, 3, true, 40.99, Array['city','sea']),
	(240, 658, 058, 3, false, 35.99, Array['city','sea']);

 

CREATE VIEW CAPACITY AS
SELECT DISTINCT C.capacity,R.room_number,H.name
FROM app_hotel H 
NATURAL JOIN app_room R NATURAL JOIN app_capacity C
WHERE H.name='TownePlace par Hotelskhouri';





/*This second view where available
measn that the room has no damage */
CREATE VIEW AVAILABILITY AS
SELECT H.zone, Count(distinct R.id)
FROM app_Hotel H NATURAL JOIN app_room R
where R.id not in(SELECT room_id from app_damage) and R.hotel_id_id=H.hotel_id
GROUP BY H.zone;

CREATE TABLE app_reservation_archive AS 
TABLE app_reservation;

CREATE TABLE app_location_archive AS 
TABLE app_location;




/*These two triggers
insert information into the archive tables
every time it is inserted on the original tables */

CREATE FUNCTION insert_New_location() RETURNS trigger AS $$
    BEGIN
       INSERT INTO app_location_archive VALUES((NEW).*);
       RETURN NEW;
    END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER insert_New_location
BEFORE INSERT ON app_location 
FOR EACH ROW
EXECUTE PROCEDURE insert_New_location();

CREATE FUNCTION insert_New_reservation() RETURNS trigger AS $$
    BEGIN
       INSERT INTO app_reservation_archive VALUES((NEW).*);
       RETURN NEW;
    END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER insert_New_reservation
BEFORE INSERT ON app_reservation 
FOR EACH ROW
EXECUTE PROCEDURE insert_New_reservation();


/*These two trigger/functions insert 
information into the archive everytime there is an update
so that we have in the archive the information available
for the things before and after the update */

CREATE FUNCTION update_location() RETURNS trigger AS $$
    BEGIN
       INSERT INTO app_location_archive VALUES((NEW).*);
       RETURN NEW;
    END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_location
BEFORE UPDATE ON app_location 
FOR EACH ROW
EXECUTE PROCEDURE update_location();


CREATE FUNCTION update_reservation() RETURNS trigger AS $$
    BEGIN
       INSERT INTO app_reservation_archive VALUES((NEW).*);
       RETURN NEW;
    END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_reservation
BEFORE UPDATE ON app_reservation
FOR EACH ROW
EXECUTE PROCEDURE update_reservation();



